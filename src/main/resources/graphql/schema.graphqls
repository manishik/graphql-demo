type Customer {
  cEmail: ID
  cFirstName: String
  cMiddleName: String
  cLastName: String
  cPhoneNumber: Int
  cCellPhoneNumber: Int
  cAddress: Address
}

type Address {
  doorNo: ID
  street1: String
  street2: String
  area: String
  zipCode: Int
  state: String
  country: String
  cEmail: ID
}

type Query {
  listAllCustomers: [Customer]
  getCustomerByEmailId(cEmail: ID!): Customer
}

type Mutation {
  addCustomer(cEmail: ID!, cFirstName: String!, cMiddleName: String, cLastName: String!,
    cPhoneNumber: Int, cCellPhoneNumber: Int): Customer
  updateCustomerByEmail(cEmail: ID!, cFirstName: String, cMiddleName: String,
    cLastName: String, cPhoneNumber: Int, cCellPhoneNumber: Int): Customer
  deleteCustomerByEmail(cEmail: ID!): String

  addAddress(cEmail: ID!, cFirstName: String!, cMiddleName: String, cLastName: String!,
    cPhoneNumber: Int, cCellPhoneNumber: Int): Customer
  updateAddress(cFirstName: String, cMiddleName: String,
    cLastName: String, cPhoneNumber: Int, cCellPhoneNumber: Int): Customer
  deleteAddress(cEmail: ID!): String
}
